name: Release
on:
  push:
    branches:
      - master

jobs:
  create-zip:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'release')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Create ZIP file
        run: |
          mkdir .zip
          zip -r ./.zip/Reports-v1.0.${{ github.run_number }}-$(date +'%d.%m.%Y').zip . -x ".git/*" ".github/*" "gradle/*" ".zip/" ".gitignore" "LICENSE" "README.md" "build.gradle" "gradlew" "gradlew.bat" "*.docx" "Oberstufenpaket/*"

      - name: Set up GitHub Release
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/releases \
               -d '{"tag_name": "v1.0.${{ github.run_number }}","name": "Release v1.0.${{ github.run_number }}","body": "Changes in this release.","draft": false,"prerelease": false}'

      - name: Upload release asset
        run: |
          upload_url=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                              -H "Accept: application/vnd.github.v3+json" \
                              https://api.github.com/repos/${{ github.repository }}/releases/tags/v1.0.${{ github.run_number }} \
                      | jq -r '.upload_url')
          upload_url=${upload_url%\{*}
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               -H "Content-Type: application/zip" \
               --data-binary @./.zip/Reports-v1.0.${{ github.run_number }}-$(date +'%d.%m.%Y').zip \
               $upload_url'?name=Reports-v1.0.${{ github.run_number }}.zip'

